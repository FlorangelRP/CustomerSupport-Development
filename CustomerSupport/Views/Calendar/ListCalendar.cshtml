@using CustomerSupport.Models
@model CustomerSupport.Models.MUser

@{
    ViewBag.Title = "Cronograma";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="card card-primary">
    <div class="card-header">
        <h3 class="card-title">@ViewBag.Title</h3>
    </div>
    <div class="card-body">

        @{
            MUserAcces perm = null;
            if (Session["Usuario"] != null)
            {
                perm = (((MUser)Session["Usuario"])).UserAcces.Where(X => X.Action == @ViewBag.Action).FirstOrDefault();
            }
        }

        <div class="row shadow-sm p-3 m-1 bg-white rounded">

            <div class="col-md-10">
                <div class="form-group">
                    <div class="control-label">Responsable:</div>
                    <select class="select2" onchange="filtrarPersona(this.value)" id="filtropersona" data-placeholder="Seleccione" name="IdPerson"></select>
                    @Html.HiddenFor(model => model.PersonEmployee.IdPerson, new { @id = "IdPersonEmployee," })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <div class="btn_option" style=" vertical-align: bottom"><button class="searchRow border-0" data-toggle="tooltip" data-placement="top" title="Filtrar" onclick="funtionelimnar()" ;return false;"><i class="fas fa-filter"></i></button></div>
                </div>
            </div>

        </div>

        <br />

        @*<div class="row shadow-sm p-3 m-1 bg-white rounded">*@
        <div class="row">

            <div class="col-xl-3 col-lg-3 col-md-12 col-sm-12 col-12">
                <div class="form-group">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="card-title mt-0 mb-0">Estados</h5>
                        </div>
                        <div class="card-body">
                            <fieldset>

                                <span class="btn-group">
                                    <input class="dot border-0 m-1" style="background-color: #1f77b4;">
                                    <label style="font-size:12px;">Nuevo</label>
                                </span><br />
                                <span class="btn-group">
                                    <input class="dot border-0 m-1" style="background-color: #aec7e8;">
                                    <label style="font-size:12px;">En Proceso</label>
                                </span><br />
                                <span class="btn-group">
                                    <input class="dot border-0 m-1" style="background-color: #ff7f0e;">
                                    <label style="font-size:12px;">En Espera de Feedback</label>
                                </span><br />
                                <span class="btn-group">
                                    <input class="dot border-0 m-1" style="background-color: #2ca02c;">
                                    <label style="font-size:12px;">Listo para Cerrar</label>
                                </span><br />
                                <span class="btn-group">
                                    <input class="dot border-0 m-1" style="background-color: #c49c94;">
                                    <label style="font-size:12px;">Finalizado</label>
                                </span><br />
                                <span class="btn-group">
                                    <input class="dot border-0 m-1" style="background-color: #c5b0d5;">
                                    <label style="font-size:12px;">No Procede</label>
                                </span><br />

                            </fieldset>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-xl-9 col-lg-9 col-md-12 col-sm-12 col-12">

                @*<div class="row" id="divDateInterval">
                    <div class="col-md-3">
                        <div class="form-group">
                            <div class="control-label">Fecha Inicio:</div>
                            @Html.TextBox("dttDateIni", "{0:d}", new { @class = "form-control", @type = "date", @id = "dttDateIni", @Value = @DateTime.Now.ToShortDateString(), @onchange = "fnDateInterval()" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <div class="control-label">Fecha Fin:</div>
                            @Html.TextBox("dttDateEnd", "{0:d}", new { @class = "form-control", @type = "date", @id = "dttDateEnd", @Value = @DateTime.Now.ToShortDateString(), @onchange = "fnDateInterval()" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        <div id="calendar"></div>
                    </div>
                </div>*@
                
                <!-- THE CALENDAR -->
                <div id="calendar"></div>

            </div>
        </div>
        @*</div>*@

        <br />

        <div>
            @Html.ActionLink("Regresar", "ListTask", "Task")
        </div>

    </div>
</div>


@section Scripts {

    @*/*--- FullCalendar v3.9.0 ---*/*@
    @*<script src="~/Scripts/moment.min.js"></script>*@
    @*<script src="~/Content/assets/js/jquery.qtip.min.js"></script>*@
    @*<script src="~/Scripts/fullcalendar.min.js"></script>*@
    @*/*--- FullCalendar v4.4.2 ---*/*@
    <script src="@Url.Content("~/Scripts/moment.min.js")"></script>
    <script src="@Url.Content("~/Content/assets/js/jquery.qtip.min.js")"></script>
    <script src="@Url.Content("~/Content/fullcalendar-4.4.2/core/main.min.js")"></script>
    <script src="@Url.Content("~/Content/fullcalendar-4.4.2/daygrid/main.min.js")"></script>
    <script src="@Url.Content("~/Content/fullcalendar-4.4.2/timeGrid/main.min.js")"></script>
    <script src="@Url.Content("~/Content/fullcalendar-4.4.2/list/main.min.js")"></script>
    <script src="@Url.Content("~/Content/fullcalendar-4.4.2/bootstrap/main.min.js")"></script>
    <script src="@Url.Content("~/Content/fullcalendar-4.4.2/moment/main.min.js")"></script>

    <script type="text/javascript">
        var ListPersons = [];
        var calendar; //FullCalendar v4.4.2
        var optionsViewFC;

        function ObtenerPersonas() {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetListPerson", "Person")?idPersonType=2',
                data: "{}",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                //global: false,
                //async: false,
                success: function (data) {
                    var itemArray = {};
                    itemArray.IdPerson = "";
                    itemArray.LastName = "";
                    itemArray.Name = "";
                    itemArray.NumIdentification = "";
                    data.push(itemArray);
                    data.reverse();
                    ListPersons = data;

                    if (ListPersons.length > 0) {
                        var persona = $("#filtropersona")[0];
                        //debugger;
                        var option = $(document.createElement('option'));
                        option.text("Seleccione");
                        option.val("0");
                        $("#filtropersona").append(option);

                        for (i = 0; i < ListPersons.length; i++) {

                            if (ListPersons[i].IdPerson != "" && ListPersons[i].LastName != "") {
                                var Name = " ";
                                if (ListPersons[i].Name != "") {
                                    Name = " " + ListPersons[i].Name;
                                }

                                persona[i + 1] = new Option(ListPersons[i].NumIdentification + " - " + ListPersons[i].LastName + Name, ListPersons[i].IdPerson, "", "");

                            }

                        }

                    }
                }
            })

        }

        ObtenerPersonas();

        //function fnDateInterval() {
        //    var DateStart = document.getElementById("dttDateIni").value;
        //    var DateEnd = document.getElementById("dttDateEnd").value;

        //    $('#calendar').fullCalendar('destroy');
        //    FiltrarCalender();

        //    $('#calendar').fullCalendar('changeView', 'agenda', {
        //        start: DateStart,
        //        end: DateEnd
        //    });
        //}


        /*--- FullCalendar v3.9.0 ---*/

        //function funtionelimnar() {
        //    $('#calendar').fullCalendar('destroy');
        //    FiltrarCalender();
        //}

        //function FiltrarCalender() {

        //    /*debugger;*/
        //    var intIdResponsable = $("#filtropersona").val();

        //    var datos = {
        //        id: intIdResponsable
        //    };

        //    $('#calendar').fullCalendar({
        //        /*themeSystem: 'jquery-ui',*/
        //        //plugins: ['dayGrid'],
        //        //defaultView: 'dayGridMonth',

        //        header:
        //        {
        //            left: 'prev,next today',
        //            center: 'title',
        //            right: 'month,agendaWeek,agendaDay,listMonth'
        //        },
        //        //weekNumbers: true, // allow see week number
        //        eventLimit: true, // allow "more" link when too many events

        //        buttonText: {
        //            today: 'Today',
        //            month: 'Month',
        //            week: 'Week',
        //            day: 'Day',
        //            list: 'List'
        //        },
        //        resources: [
        //            { id: "En Proceso", title: "En Proceso" },
        //            { id: "Nuevo", title: "Nuevo" },
        //            { id: "Finalizado", title: "Finalizado" },
        //            { id: "En Espera de Feedback", title: "En Espera de Feedback" },
        //            { id: "Listo para Cerrar", title: "Listo para Cerrar" }
        //        ],

        //        events: function (start, end, timezone, callback) {
        //            $.ajax({
        //                url: '/Calendar/GetCalendarData',
        //                type: "GET",
        //                dataType: "JSON",
        //                'data': datos,
        //                'dataSrc': '',
        //                success: function (result) {

        //                    var events = [];

        //                    $.each(result, function (i, data) {

        //                        var strbackgroundColor;
        //                        var strborderColor;
        //                        var status = data.StatusTask;

        //                        var DateStart;
        //                        var DateEnd;

        //                        if (status === "Nuevo") {
        //                            strbackgroundColor = '#1f77b4';
        //                            strborderColor = '#1f77b4';
        //                        }

        //                        if(status === "En Proceso")
        //                        {
        //                            strbackgroundColor = '#aec7e8';
        //                            strborderColor = '#aec7e8';
        //                        }

        //                        if (status === "En Espera de Feedback") {
        //                            strbackgroundColor = '#ff7f0e';
        //                            strborderColor = '#ff7f0e';
        //                        }

        //                        if (status === "Listo para Cerrar") {
        //                            strbackgroundColor = '#2ca02c';
        //                            strborderColor = '#2ca02c';
        //                        }

        //                        if (status === "Finalizado") {
        //                            strbackgroundColor = '#c49c94';
        //                            strborderColor = '#c49c94';
        //                        }


        //                        if (status === "No Procede") {
        //                            strbackgroundColor = '#c5b0d5';
        //                            strborderColor = '#c5b0d5';
        //                        }

        //                        if (moment(data.DateIni).format('YYYY-MM-DD') === moment(data.DateEnd).format('YYYY-MM-DD')) {
        //                            DateStart = moment(data.DateIni + ' ' + data.HourIni).format('YYYY-MM-DD HH:mm');
        //                            DateEnd = moment(data.DateEnd + ' ' + data.HourEnd).format('YYYY-MM-DD HH:mm');
        //                        }
        //                        else {
        //                            DateStart = moment(data.DateIni).format('YYYY-MM-DD');
        //                            DateEnd = moment(data.DateEnd).add(1, 'days').format('YYYY-MM-DD');
        //                        }
        //                        //alert(DateStart);
        //                        //alert(DateEnd);

        //                        events.push(
        //                            {
        //                                title: data.Tittle,
        //                                description: data.Activity,
        //                                start: DateStart, // moment(data.DateIni).format('YYYY-MM-DD'),
        //                                end: DateEnd,     // moment(data.DateEnd).format('YYYY-MM-DD'),
        //                                backgroundColor: strbackgroundColor,
        //                                borderColor: strborderColor,
        //                                textColor: 'white'
        //                            });
        //                    });

        //                    callback(events);
        //                }
        //            });
        //        },

        //        eventRender: function (event, element,view) {
        //            element.qtip(
        //                {
        //                    content: event.description
        //                });
        //        },

        //        editable: false,

        //        windowResize: function () {
        //            var ww = $(window).width();
        //            var view = (ww <= 768) ? 'listMonth' : 'month';
        //            var currentView = $('#calendar').fullCalendar('getView');
        //            //alert(view);
        //            //alert(currentView.name);
        //            if (view != currentView.name) {
        //                $('#calendar').fullCalendar('changeView', view);
        //                //$('#calendar').fullCalendar('render');
        //            }
        //            //if (ww <= 768) {
        //            //    $('#calendar').find('.fc-left').hide(); //.fc-toolbar .fc-header-toolbar
        //            //    //$('#divDateInterval').show();
        //            //} else {
        //            //    $('#calendar').find('.fc-left').show();
        //            //    //$('#divDateInterval').hide();
        //            //}
        //        }

        //    });

        //    //Para cuando carga por primera vez la pantalla
        //    var ww = $(window).width();
        //    var view = (ww <= 768) ? 'listMonth' : 'month';
        //    var currentView = $('#calendar').fullCalendar('getView');
        //    if (view != currentView.name) {
        //        $('#calendar').fullCalendar('changeView', view);
        //    }
        //    //---------------------------------------------------

        //}
        /*---        End          ---*/


        /*--- FullCalendar v4.4.2 ---*/

        function funtionelimnar() {

            if (calendar) {
                calendar.destroy();
            }

            FiltrarCalender();
        }


        function FiltrarCalender() {

            var intIdResponsable = $("#filtropersona").val();
            var datos = {
                id: intIdResponsable
            };

            var calendarEl = document.getElementById('calendar');

            optionsViewFC = {

                plugins: ['dayGrid', 'timeGrid', 'list', 'bootstrap', 'moment'],
                //defaultView: 'dayGridMonth',
                //timeZone: 'UTC',
                themeSystem: 'bootstrap',
                header:
                {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay,listMonth'
                },
                //weekNumbers: true, // allow see week number
                eventLimit: true, // allow "more" link when too many events

                buttonText: {
                    today: 'Today',
                    month: 'Month',
                    week: 'Week',
                    day: 'Day',
                    list: 'List'
                },

                resources: [
                    { id: "En Proceso", title: "En Proceso" },
                    { id: "Nuevo", title: "Nuevo" },
                    { id: "Finalizado", title: "Finalizado" },
                    { id: "En Espera de Feedback", title: "En Espera de Feedback" },
                    { id: "Listo para Cerrar", title: "Listo para Cerrar" }
                ],

                events: function (info, successCallback, failureCallback) {
                    $.ajax({
                        url: '/Calendar/GetCalendarData',
                        type: "GET",
                        dataType: "JSON",
                        'data': datos,
                        'dataSrc': '',
                        success: function (result) {

                            var events = [];

                            $.each(result, function (i, data) {

                                var strbackgroundColor;
                                var strborderColor;
                                var status = data.StatusTask;

                                var DateStart;
                                var DateEnd;

                                if (status === "Nuevo") {
                                    strbackgroundColor = '#1f77b4';
                                    strborderColor = '#1f77b4';
                                }

                                if (status === "En Proceso") {
                                    strbackgroundColor = '#aec7e8';
                                    strborderColor = '#aec7e8';
                                }

                                if (status === "En Espera de Feedback") {
                                    strbackgroundColor = '#ff7f0e';
                                    strborderColor = '#ff7f0e';
                                }

                                if (status === "Listo para Cerrar") {
                                    strbackgroundColor = '#2ca02c';
                                    strborderColor = '#2ca02c';
                                }

                                if (status === "Finalizado") {
                                    strbackgroundColor = '#c49c94';
                                    strborderColor = '#c49c94';
                                }


                                if (status === "No Procede") {
                                    strbackgroundColor = '#c5b0d5';
                                    strborderColor = '#c5b0d5';
                                }

                                if (moment(data.DateIni).format('YYYY-MM-DD') === moment(data.DateEnd).format('YYYY-MM-DD')) {
                                    DateStart = moment(data.DateIni + ' ' + data.HourIni).format('YYYY-MM-DD HH:mm');
                                    DateEnd = moment(data.DateEnd + ' ' + data.HourEnd).format('YYYY-MM-DD HH:mm');
                                }
                                else {
                                    DateStart = moment(data.DateIni).format('YYYY-MM-DD');
                                    DateEnd = moment(data.DateEnd).add(1, 'days').format('YYYY-MM-DD');
                                }
                                //alert(DateStart);
                                //alert(DateEnd);

                                events.push(
                                    {
                                        title: data.Tittle,
                                        description: data.Activity,
                                        start: DateStart, // moment(data.DateIni).format('YYYY-MM-DD'),
                                        end: DateEnd,     // moment(data.DateEnd).format('YYYY-MM-DD'),
                                        backgroundColor: strbackgroundColor,
                                        borderColor: strborderColor,
                                        textColor: 'white'
                                    });
                            });

                            successCallback(events);
                        }
                    });
                },

                eventRender: function (info) {
                    $(info.el).qtip({
                        content: {
                            //title: info.event.extendedProps.summaryTitle,
                            text: info.event.extendedProps.description
                        },
                        style: { classes: 'qtip-bootstrap' } //see documentation in https://github.com/qTip2/qTip2/wiki/Style-Guide
                    });
                },

                editable: false

                //, windowResize: function (view) {
                //    //var ww = $(window).width();
                //    //var view = (ww <= 768) ? 'listMonth' : 'dayGridMonth';
                //    //var currentView = calendar.view;
                //    //if (view != currentView.name) {
                //    //    calendar.changeView(view);
                //    //}    right: 'dayGridMonth,timeGridWeek,timeGridDay,listMonth'
                //    if (ww <= 768) {
                //        //$('#calendar').find('button.fc-timeGridWeek-button').hide();
                //        //$('#calendar').find('button.fc-timeGriDay-button').hide();
                //        $('#calendar').find('button.fc-listMonth-button').hide();
                //        //calendar.setOption('titleFormat', 'MMM YY');
                //    } else {
                //        //$('#calendar').find('button.fc-timeGridWeek-button').show();
                //        //$('#calendar').find('button.fc-timeGriDay-button').show();
                //        $('#calendar').find('button.fc-listMonth-button').show();
                //        //calendar.setOption('titleFormat', 'MMMM YYYY');
                //    }
                //}

            };
            recreateFC($(window).width());

            calendar = new FullCalendar.Calendar(calendarEl, optionsViewFC);
            calendar.render();            
            calendar.updateSize();
        }

        function recreateFC(screenWidth) {
            if (screenWidth <= 768) {
                optionsViewFC.header = {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay'
                };
            } else {
                optionsViewFC.header = {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay,listMonth'
                };
            }
            //alert(optionsViewFC.header.right);
            //console.log(optionsViewFC.header);
        }
        /*---        End          ---*/



        function cargarDataPerson(IdPerson, lstPersons) {
            if (IdPerson == "" || IdPerson == "0") { return false; }
            //debugger;
            var objPerson = lstPersons.find((m) => m.IdPerson == IdPerson);
            var fecha = new Date();
        }

        function filtrarPersona(person) {
            /*debugger;*/
            var SelecCodeValue = person.trim();
            cargarDataPerson(SelecCodeValue, ListPersons);
        }

        $(document).ready(function () {

            $('.select2').select2({ width: '100%' });

            /*--- FullCalendar v3.9.0 ---*/
            //$('#filtropersona').on('change', function () {
            //    $('calendar').fullCalendar('destroy');
            //    FiltrarCalender();
            //});
            /*---        End          ---*/

        });

        document.addEventListener('DOMContentLoaded', function () {
            FiltrarCalender();            
        });

        $(window).resize(function () {
            funtionelimnar();
        });

    </script>
}
