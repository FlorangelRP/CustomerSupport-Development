@using CustomerSupport.Models
@model CustomerSupport.Models.MUser

@{
    ViewBag.Title = "Listado de Usuario";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Action = "ListUser";
}

<div class="card card-primary">
    <div class="card-header">
        <h3 class="card-title">@ViewBag.Title</h3>
    </div>
    <div class="card-body">

        @*<form>*@
        @{
            MUserAcces perm = null;
            if (Session["Usuario"] != null)
            {
                perm = (((MUser)Session["Usuario"])).UserAcces.Where(X => X.Action == @ViewBag.Action).FirstOrDefault();
            }
        }

        @if (perm != null)
        {
            if (perm.Create == true)
            {
                <div class="row text-right">
                    <div class="col-md-12">
                        <div class="text-right">
                            @*<button class="btn boton_personalizado" onclick="location.href='@Url.Action("Create", "User")';return false;"><i class="fas fa-user-plus"></i> Agregar</button>*@
                            @*<a href="location.href='@Url.Action("AddUser", "User")';return false;" class="white_btn">Agregar</a>*@
                            <button class="white_btn" onclick="location.href='@Url.Action("AddUser", "User")';return false;">Agregar</button>
                        </div>
                    </div>
                </div>
            }
        }

        @using (Html.BeginForm("ListUser", "User", FormMethod.Post))
        {

            <div class="table-responsive">
                <div class="container">
                    <table id="TUser" class="table table-bordered table-striped">
                        <thead>
                            <tr>
                                <th>Codigo</th>
                                <th>Usuario</th>
                                <th>Nombres</th>
                                <th>Apellidos</th>
                                <th>Cargo</th>
                                <th>Roles</th>
                                <th>Estado</th>
                                @if (perm != null)
                                {
                                    if (perm.Search == true || perm.Edit == true)
                                    {
                                        <th class="text-center" colspan="2">Opciones</th>
                                    }
                                }
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
           
            @Html.HiddenFor(model => model.IdUser, new { @id = "hidd_Iduser" })
            @Html.Hidden("submit")

        }

        @*</form>*@

    </div>
</div>


@section Scripts {

    <script src="~/Content/assets/plugins/datatables/jquery.dataTables.min.js"></script>
    <script src="~/Content/assets/plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>
    <script src="~/Content/assets/plugins/datatables-responsive/js/dataTables.responsive.min.js"></script>
    <script src="~/Content/assets/plugins/datatables-responsive/js/responsive.bootstrap4.min.js"></script>
    <script src="~/Content/assets/plugins/datatables-buttons/js/dataTables.buttons.min.js"></script>
    <script src="~/Content/assets/plugins/datatables-buttons/js/buttons.bootstrap4.min.js"></script>
    <script src="~/Content/assets/plugins/datatables-buttons/js/buttons.html5.min.js"></script>
    <script src="~/Content/assets/plugins/datatables-buttons/js/buttons.print.min.js"></script>
    <script src="~/Content/assets/plugins/datatables-buttons/js/buttons.colVis.min.js"></script>
    <script src="~/Content/assets/plugins/datatables-buttons/js/buttons.colVis.min.js"></script>

    <script type="text/javascript">

        var Permis = @Html.Raw(Json.Encode(perm));
        Buscar = Permis.Search;
        Editar = Permis.Edit;

        var table = $('#TUser').DataTable({

            'ajax': {
                'url': '@Url.Action("GetListUser", "User")',
                'type': 'GET',
                'dataType': 'json',
                'dataSrc': ''
            },
            'columns':
                [
                    { 'data': 'IdUser', 'autowidth': true },
                    { 'data': 'Login', 'autowidth': true },
                    { 'data': 'PersonEmployee.Name', 'autowidth': true },
                    { 'data': 'PersonEmployee.LastName', 'autowidth': true },
                    { 'data': 'PersonEmployee.Position', 'autowidth': true },
                    { 'data': 'UserRolesNames', 'autowidth': true },
                    { 'data': 'StatusDesc', 'autowidth': true },
                    {
                        'data': null, render: function (data, type, row) {
                            if (data != null) {
                                if (row.IdUser == null) {
                                    return '';
                                } else {
                                    ////return '<div class="btn_option pt-0"><a class="editRow"><i class="fas fa-edit"></i></a></div>';                                    
                                    var link = '<div class="btn_option pt-0"><button class="editRow border-0" name="linkEdit_&"><i class="fas fa-edit"></i></button></div>';
                                    link = link.replace("&", row.IdUser);
                                    return link;
                                }
                            }
                        }, 'autowidth': true
                    },
                    {
                        'data': null, render: function (data, type, row) {
                            if (data != null) {
                                if (row.IdUser == null ) {
                                    return '';
                                } else {
                                    ////return '<div class="btn_option pt-0"><a class="searchRow"><i class="fas fa-search"></i></a></div>';                                    
                                    var link = '<div class="btn_option pt-0"><button class="searchRow border-0" name="linkSearch_&"><i class="fas fa-search"></i></button></div>';
                                    link = link.replace("&", row.IdUser);
                                    return link;
                                }
                            }
                        }, 'autowidth': true
                    },
                    //{
                    //    'data': null, render: function (data, type, row) {
                    //        //debugger;
                    //        if (data != null) {
                    //            if (row.IdUser == null) {
                    //                return '';
                    //            } else
                    //                return '<div class="btn_option pt-0"><a class="deleteRow"><i class="far fa-trash-alt"></i></a></div>';
                    //            }
                    //        }
                    //    }, 'autowidth': true
                    //}
                ],
        "columnDefs":
            [
                { "targets": 0, "bVisible": false, "orderable": false },
                { "targets": 7, "bVisible": Editar },
                { "targets": 8, "bVisible": Buscar }
            ],
            "bAutoWidth": false,
            "bInfo": false,
            "language": {
                "sProcessing": "Procesando...",
                "sLengthMenu": "Mostrar _MENU_ registros",
                "sZeroRecords": "No se encontraron resultados",
                "sEmptyTable": "No existen Registros",
                "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                "sInfoPostFix": "",
                "sSearch": "Buscar:",
                "sUrl": "",
                "sInfoThousands": ",",
                "sLoadingRecords": "Cargando...",
                "oPaginate": {
                    "sFirst": "Primero",
                    "sLast": "Último",
                    "sNext": "Siguiente",
                    "sPrevious": "Anterior"
                },
                "oAria": {
                    "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                    "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                }
            }

        });

        $('#TUser').on("click", "button.searchRow", function () {
            var data = table.row($(this).parents("tr")).data();
            $("#hidd_Iduser").val(data.IdUser);
            $("#submit").val("searchRow");
            location.href = '@Url.Action("ListUser", "User")';
            ////$(".searchRow").attr("href", 'Url.Action("DetailUser", "User")?id=' + data.IdUser);
        });

        $('#TUser').on("click", "button.editRow", function () {
            var data = table.row($(this).parents("tr")).data();
            $("#hidd_Iduser").val(data.IdUser);
            $("#submit").val("editRow");
            location.href = '@Url.Action("ListUser", "User")';
            ////$(".editRow").attr("href", 'Url.Action("EditUser", "User")?id=' + data.IdUser);
        });

    </script>
}
